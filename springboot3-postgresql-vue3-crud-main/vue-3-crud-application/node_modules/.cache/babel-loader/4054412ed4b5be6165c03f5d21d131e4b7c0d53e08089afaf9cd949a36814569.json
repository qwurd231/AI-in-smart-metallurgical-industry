{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      user: {\n        name: this.name,\n        email: this.email,\n        password: this.password\n      }\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        // Make an Axios request to your server for authentication\n        const response = await axios.post('/login', {\n          email: this.user.email,\n          password: this.user.password\n        });\n\n        // Assuming your server responds with a user object upon successful authentication\n        const authenticatedUser = response.data.user;\n\n        // Redirect to the corresponding user page or perform any other actions\n        console.log(\"Login successful!\");\n        // Example: Redirect to the user's profile page\n        this.$router.push(`/user/${authenticatedUser.id}`);\n      } catch (error) {\n        // Authentication failed\n        // Show error message\n        console.error(\"Login failed. Invalid credentials.\");\n        // You can also set a message in your data to display it in the template\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFF,IAAI,EAAE,IAAI,CAACA,IAAI;QACfG,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACnB;IACJ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,KAAK,GAAG;MACV,IAAI;QACA;QACA,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,QAAQ,EAAE;UACxCL,KAAK,EAAE,IAAI,CAACD,IAAI,CAACC,KAAK;UACtBC,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE;QACxB,CAAC,CAAC;;QAEF;QACA,MAAMK,iBAAgB,GAAIF,QAAQ,CAACN,IAAI,CAACC,IAAI;;QAE5C;QACAQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,SAAQJ,iBAAiB,CAACK,EAAG,EAAC,CAAC;MACtD,EAAE,OAAOC,KAAK,EAAE;QACZ;QACA;QACAL,OAAO,CAACK,KAAK,CAAC,oCAAoC,CAAC;QACnD;MACJ;IACJ;EACJ;AACJ,CAAC","names":["axios","name","data","user","email","password","methods","login","response","post","authenticatedUser","console","log","$router","push","id","error"],"sourceRoot":"","sources":["F:\\Study\\NKD\\2023FALL\\NP\\Target\\springboot3-postgresql-vue3-crud-main\\vue-3-crud-application\\src\\components\\Login.vue"],"sourcesContent":["<!-- write login page -->\r\n<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h3>Login Form</h3>\r\n                <form @submit.prevent=\"login\">\r\n                    <div class=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" class=\"form-control\" v-model=\"user.name\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" class=\"form-control\" v-model=\"user.email\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" class=\"form-control\" v-model=\"user.password\">\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"login(user.email, user.password)\">Login\r\n                    </button>\r\n                    <router-link to=\"/register\" class=\"btn btn-link\">Register</router-link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: \"Login\",\r\n    data() {\r\n        return {\r\n            user: {\r\n                name: this.name,\r\n                email: this.email,\r\n                password: this.password\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        async login() {\r\n            try {\r\n                // Make an Axios request to your server for authentication\r\n                const response = await axios.post('/login', {\r\n                    email: this.user.email,\r\n                    password: this.user.password\r\n                });\r\n\r\n                // Assuming your server responds with a user object upon successful authentication\r\n                const authenticatedUser = response.data.user;\r\n\r\n                // Redirect to the corresponding user page or perform any other actions\r\n                console.log(\"Login successful!\");\r\n                // Example: Redirect to the user's profile page\r\n                this.$router.push(`/user/${authenticatedUser.id}`);\r\n            } catch (error) {\r\n                // Authentication failed\r\n                // Show error message\r\n                console.error(\"Login failed. Invalid credentials.\");\r\n                // You can also set a message in your data to display it in the template\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}