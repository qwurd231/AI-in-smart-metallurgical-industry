{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport UserDataService from \"../service/UserDataService\";\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      name: \"\",\n      emailId: \"\",\n      password: \"\",\n      errors: []\n    };\n  },\n  computed: {\n    id() {\n      return Number(this.$route.params.id);\n    }\n  },\n  methods: {\n    refreshUserDetails() {\n      UserDataService.retrieveUser(this.id).then(res => {\n        this.name = res.data.name;\n        this.emailId = res.data.emailId;\n        this.password = res.data.password;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.name) {\n        this.errors.push(\"Enter valid values\");\n      }\n      if (this.errors.length === 0) {\n        console.log(this.$route.params);\n        if (this.id === -1) {\n          UserDataService.createUser({\n            name: this.name,\n            emailId: this.emailId,\n            password: this.password\n          }).then(() => {\n            this.$router.push(\"/\");\n          });\n        } else {\n          console.log(\"this.id\", this.id);\n          UserDataService.updateUser(this.id, {\n            id: this.id,\n            name: this.name,\n            emailId: this.emailId,\n            password: this.password\n          }).then(() => {\n            this.$router.push(\"/\");\n          });\n        }\n      }\n    }\n  },\n  created() {\n    this.refreshUserDetails();\n  }\n};","map":{"version":3,"mappings":";AAgCA,OAAOA,eAAc,MAAO,4BAA4B;AAExD,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,IAAI,GAAG;IACH,OAAO;MACHD,IAAI,EAAE,EAAE;MACRE,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,EAAE,GAAG;MACD,OAAOC,MAAM,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACH,EAAE,CAAC;IACxC;EACJ,CAAC;EACDI,OAAO,EAAE;IACLC,kBAAkB,GAAG;MACjBZ,eAAe,CAACa,YAAY,CAAC,IAAI,CAACN,EAAE,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAK;QAChD,IAAI,CAACd,IAAG,GAAIc,GAAG,CAACb,IAAI,CAACD,IAAI;QACzB,IAAI,CAACE,OAAM,GAAIY,GAAG,CAACb,IAAI,CAACC,OAAO;QAC/B,IAAI,CAACC,QAAO,GAAIW,GAAG,CAACb,IAAI,CAACE,QAAQ;MACrC,CAAC,CAAC;IACN,CAAC;IACDY,iBAAiB,CAACC,CAAC,EAAE;MACjBA,CAAC,CAACC,cAAc,EAAE;MAClB,IAAI,CAACb,MAAK,GAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAACJ,IAAI,EAAE;QACZ,IAAI,CAACI,MAAM,CAACc,IAAI,CAAC,oBAAoB,CAAC;MAC1C;MACA,IAAI,IAAI,CAACd,MAAM,CAACe,MAAK,KAAM,CAAC,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,MAAM,CAACC,MAAM;QAC9B,IAAI,IAAI,CAACH,EAAC,KAAM,CAAC,CAAC,EAAE;UAChBP,eAAe,CAACuB,UAAU,CAAC;YACvBtB,IAAI,EAAE,IAAI,CAACA,IAAI;YACfE,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBC,QAAQ,EAAE,IAAI,CAACA;UACnB,CAAC,CAAC,CAACU,IAAI,CAAC,MAAM;YACV,IAAI,CAACU,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC;UAC1B,CAAC,CAAC;QACN,OAAO;UACHE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACf,EAAE,CAAC;UAC/BP,eAAe,CAACyB,UAAU,CAAC,IAAI,CAAClB,EAAE,EAAE;YAChCA,EAAE,EAAE,IAAI,CAACA,EAAE;YACXN,IAAI,EAAE,IAAI,CAACA,IAAI;YACfE,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBC,QAAQ,EAAE,IAAI,CAACA;UACnB,CAAC,CAAC,CAACU,IAAI,CAAC,MAAM;YACV,IAAI,CAACU,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC;UAC1B,CAAC,CAAC;QACN;MACJ;IACJ;EACJ,CAAC;EACDO,OAAO,GAAG;IACN,IAAI,CAACd,kBAAkB,EAAE;EAC7B;AACJ,CAAC","names":["UserDataService","name","data","emailId","password","errors","computed","id","Number","$route","params","methods","refreshUserDetails","retrieveUser","then","res","validateAndSubmit","e","preventDefault","push","length","console","log","createUser","$router","updateUser","created"],"sourceRoot":"","sources":["F:\\Study\\NKD\\2023FALL\\NP\\Target\\springboot3-postgresql-vue3-crud-main\\vue-3-crud-application\\src\\components\\User.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h3>User</h3>\r\n        <div class=\"container\">\r\n            <form @submit=\"validateAndSubmit\">\r\n                <div v-if=\"errors.length\">\r\n                    <div\r\n                        class=\"alert alert-danger\"\r\n                        v-bind:key=\"index\"\r\n                        v-for=\"(error, index) in errors\"\r\n                    >\r\n                        {{ error }}\r\n                    </div>\r\n                </div>\r\n                <fieldset class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"name\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>Email Id</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"emailId\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"password\"/>\r\n                </fieldset>\r\n                <button class=\"btn btn-success\" type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport UserDataService from \"../service/UserDataService\";\r\n\r\nexport default {\r\n    name: \"User\",\r\n    data() {\r\n        return {\r\n            name: \"\",\r\n            emailId: \"\",\r\n            password: \"\",\r\n            errors: [],\r\n        };\r\n    },\r\n    computed: {\r\n        id() {\r\n            return Number(this.$route.params.id);\r\n        },\r\n    },\r\n    methods: {\r\n        refreshUserDetails() {\r\n            UserDataService.retrieveUser(this.id).then((res) => {\r\n                this.name = res.data.name;\r\n                this.emailId = res.data.emailId;\r\n                this.password = res.data.password;\r\n            });\r\n        },\r\n        validateAndSubmit(e) {\r\n            e.preventDefault();\r\n            this.errors = [];\r\n            if (!this.name) {\r\n                this.errors.push(\"Enter valid values\");\r\n            }\r\n            if (this.errors.length === 0) {\r\n                console.log(this.$route.params)\r\n                if (this.id === -1) {\r\n                    UserDataService.createUser({\r\n                        name: this.name,\r\n                        emailId: this.emailId,\r\n                        password: this.password,\r\n                    }).then(() => {\r\n                        this.$router.push(\"/\");\r\n                    });\r\n                } else {\r\n                    console.log(\"this.id\", this.id);\r\n                    UserDataService.updateUser(this.id, {\r\n                        id: this.id,\r\n                        name: this.name,\r\n                        emailId: this.emailId,\r\n                        password: this.password,\r\n                    }).then(() => {\r\n                        this.$router.push(\"/\");\r\n                    });\r\n                }\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.refreshUserDetails();\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}