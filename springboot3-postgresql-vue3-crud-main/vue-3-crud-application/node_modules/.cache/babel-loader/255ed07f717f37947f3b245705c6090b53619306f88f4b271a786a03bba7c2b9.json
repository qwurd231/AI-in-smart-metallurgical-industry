{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DataSetService from \"../service/DataSetService\";\nimport UserDataService from \"../service/UserDataService\";\nexport default {\n  name: \"Data\",\n  data() {\n    return {\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        dataSets: []\n      }\n    };\n  },\n  watch: {\n    'output': function () {\n      this.dataSet.output1 = this.dataSet.output1 === 0 ? \"-\" : this.dataSet.output1;\n      this.dataSet.output2 = this.dataSet.output2 === 0 ? \"-\" : this.dataSet.output2;\n      this.dataSet.output3 = this.dataSet.output3 === 0 ? \"-\" : this.dataSet.output3;\n      location.reload();\n    }\n  },\n  methods: {\n    refreshDataSets() {\n      this.user.id = this.$route.params.user_id;\n      UserDataService.retrieveUser(this.user.id).then(res => {\n        this.user.name = res.data.name;\n        this.user.email = res.data.email;\n        this.user.password = res.data.password;\n      });\n      DataSetService.retrieveDataSetByUserId(this.user.id).then(res => {\n        this.user.dataSets = res.data;\n      });\n    },\n    addDataSet() {\n      this.$router.push(`/user/${this.user.id}/data/-1`);\n    },\n    updateDataSet(id) {\n      this.$router.push(`user/${this.user.id}/data/${id}`);\n    },\n    deleteDataSet(id) {\n      DataSetService.deleteDataSet(id).then(() => {\n        this.refreshDataSets();\n      });\n    }\n  },\n  created() {\n    this.refreshDataSets();\n  }\n};","map":{"version":3,"mappings":";AAwDA,OAAOA,cAAa,MAAO,2BAA2B;AACtD,OAAOC,eAAc,MAAO,4BAA4B;AAExD,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,EAAE,EAAE,EAAE;QACNH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd;IACJ,CAAC;EACL,CAAC;EACDC,KAAK,EAAE;IACH,QAAQ,EAAE,YAAY;MAClB,IAAI,CAACC,OAAO,CAACC,OAAM,GAAK,IAAI,CAACD,OAAO,CAACC,OAAM,KAAM,CAAC,GAAI,GAAE,GAAI,IAAI,CAACD,OAAO,CAACC,OAAO;MAChF,IAAI,CAACD,OAAO,CAACE,OAAM,GAAK,IAAI,CAACF,OAAO,CAACE,OAAM,KAAM,CAAC,GAAI,GAAE,GAAI,IAAI,CAACF,OAAO,CAACE,OAAO;MAChF,IAAI,CAACF,OAAO,CAACG,OAAM,GAAK,IAAI,CAACH,OAAO,CAACG,OAAM,KAAM,CAAC,GAAI,GAAE,GAAI,IAAI,CAACH,OAAO,CAACG,OAAO;MAChFC,QAAQ,CAACC,MAAM,EAAE;IACrB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,eAAe,GAAG;MACd,IAAI,CAACb,IAAI,CAACC,EAAC,GAAI,IAAI,CAACa,MAAM,CAACC,MAAM,CAACC,OAAO;MACzCnB,eAAe,CAACoB,YAAY,CAAC,IAAI,CAACjB,IAAI,CAACC,EAAE,CAAC,CAACiB,IAAI,CAAEC,GAAG,IAAK;QACrD,IAAI,CAACnB,IAAI,CAACF,IAAG,GAAIqB,GAAG,CAACpB,IAAI,CAACD,IAAI;QAC9B,IAAI,CAACE,IAAI,CAACE,KAAI,GAAIiB,GAAG,CAACpB,IAAI,CAACG,KAAK;QAChC,IAAI,CAACF,IAAI,CAACG,QAAO,GAAIgB,GAAG,CAACpB,IAAI,CAACI,QAAQ;MAC1C,CAAC,CAAC;MACFP,cAAc,CAACwB,uBAAuB,CAAC,IAAI,CAACpB,IAAI,CAACC,EAAE,CAAC,CAACiB,IAAI,CAAEC,GAAG,IAAK;QAC/D,IAAI,CAACnB,IAAI,CAACI,QAAO,GAAIe,GAAG,CAACpB,IAAI;MACjC,CAAC,CAAC;IACN,CAAC;IACDsB,UAAU,GAAG;MACT,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,SAAQ,IAAI,CAACvB,IAAI,CAACC,EAAG,UAAS,CAAC;IACtD,CAAC;IACDuB,aAAa,CAACvB,EAAE,EAAE;MACd,IAAI,CAACqB,OAAO,CAACC,IAAI,CAAE,QAAO,IAAI,CAACvB,IAAI,CAACC,EAAG,SAAQA,EAAG,EAAC,CAAC;IACxD,CAAC;IACDwB,aAAa,CAACxB,EAAE,EAAE;MACdL,cAAc,CAAC6B,aAAa,CAACxB,EAAE,CAAC,CAACiB,IAAI,CAAC,MAAM;QACxC,IAAI,CAACL,eAAe,EAAE;MAC1B,CAAC,CAAC;IACN;EACJ,CAAC;EACDa,OAAO,GAAG;IACN,IAAI,CAACb,eAAe,EAAE;EAC1B;AACJ,CAAC","names":["DataSetService","UserDataService","name","data","user","id","email","password","dataSets","watch","dataSet","output1","output2","output3","location","reload","methods","refreshDataSets","$route","params","user_id","retrieveUser","then","res","retrieveDataSetByUserId","addDataSet","$router","push","updateDataSet","deleteDataSet","created"],"sourceRoot":"","sources":["F:\\Study\\NKD\\2023FALL\\NP\\Target\\springboot3-postgresql-vue3-crud-main\\vue-3-crud-application\\src\\components\\Data.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h3>数据</h3>\r\n        <br>\r\n        <div class=\"container\">\r\n            <h4>用户</h4>\r\n            <h4>{{ this.user.name }}</h4>\r\n        </div>\r\n        <div class=\"container\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>模型</th>\r\n                    <th>终点温度(℃)</th>\r\n                    <th>终点碳含量</th>\r\n                    <th>终点硅含量</th>\r\n                    <!-- Add more columns for each parameter -->\r\n                    <th>更新</th>\r\n                    <th>删除</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr v-for=\"dataSet in user.dataSets\" v-bind:key=\"dataSet.id\">\r\n                    <td >{{ dataSet.id }}</td>\r\n                    <td>{{ dataSet.selectedModel }}</td>\r\n                    <td>\r\n                        <scan v-model=\"output\">{{ dataSet.output1 }}</scan>\r\n                    </td>\r\n                    <td>\r\n                        <scan v-model=\"output\">{{ dataSet.output2 }}</scan>\r\n                    </td>\r\n                    <td>\r\n                        <scan v-model=\"output\">{{ dataSet.output3 }}</scan>\r\n                    </td>\r\n                    <td>\r\n                        <button class=\"btn btn-warning\" v-on:click=\"updateDataSet(dataSet.id)\">\r\n                            更新\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <button class=\"btn btn-danger\" v-on:click=\"deleteDataSet(dataSet.id)\">\r\n                            删除\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"row\">\r\n                <button class=\"btn btn-success\" v-on:click=\"addDataSet()\">Add</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport DataSetService from \"../service/DataSetService\";\r\nimport UserDataService from \"../service/UserDataService\";\r\n\r\nexport default {\r\n    name: \"Data\",\r\n    data() {\r\n        return {\r\n            user: {\r\n                id: \"\",\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                dataSets: [],\r\n            },\r\n        };\r\n    },\r\n    watch: {\r\n        'output': function () {\r\n            this.dataSet.output1 = (this.dataSet.output1 === 0) ? \"-\" : this.dataSet.output1;\r\n            this.dataSet.output2 = (this.dataSet.output2 === 0) ? \"-\" : this.dataSet.output2;\r\n            this.dataSet.output3 = (this.dataSet.output3 === 0) ? \"-\" : this.dataSet.output3;\r\n            location.reload();\r\n        },\r\n    },\r\n    methods: {\r\n        refreshDataSets() {\r\n            this.user.id = this.$route.params.user_id;\r\n            UserDataService.retrieveUser(this.user.id).then((res) => {\r\n                this.user.name = res.data.name;\r\n                this.user.email = res.data.email;\r\n                this.user.password = res.data.password;\r\n            });\r\n            DataSetService.retrieveDataSetByUserId(this.user.id).then((res) => {\r\n                this.user.dataSets = res.data;\r\n            });\r\n        },\r\n        addDataSet() {\r\n            this.$router.push(`/user/${this.user.id}/data/-1`);\r\n        },\r\n        updateDataSet(id) {\r\n            this.$router.push(`user/${this.user.id}/data/${id}`);\r\n        },\r\n        deleteDataSet(id) {\r\n            DataSetService.deleteDataSet(id).then(() => {\r\n                this.refreshDataSets();\r\n            });\r\n        },\r\n    },\r\n    created() {\r\n        this.refreshDataSets();\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}