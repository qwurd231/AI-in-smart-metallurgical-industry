{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DataSetService from \"../service/DataSetService\";\nexport default {\n  name: \"DataSetSubmit\",\n  data() {\n    return {\n      param1: \"\",\n      param2: \"\",\n      param3: \"\",\n      param4: \"\",\n      param5: \"\",\n      param6: \"\",\n      param7: \"\",\n      param8: \"\",\n      param9: \"\",\n      param10: \"\",\n      param11: \"\",\n      param12: \"\",\n      param13: \"\",\n      param14: \"\",\n      errors: []\n    };\n  },\n  computed: {\n    id() {\n      return Number(this.$route.params.id);\n    }\n  },\n  methods: {\n    addData() {\n      if (this.errors.length === 0) {\n        if (this.id === -1) {\n          DataSetService.createDataSet({\n            userId: this.userId,\n            param1: this.param1,\n            param2: this.param2,\n            param3: this.param3,\n            param4: this.param4,\n            param5: this.param5,\n            param6: this.param6,\n            param7: this.param7,\n            param8: this.param8,\n            param9: this.param9,\n            param10: this.param10,\n            param11: this.param11,\n            param12: this.param12,\n            param13: this.param13,\n            param14: this.param14\n          }).then(() => {\n            this.$router.push(\"/data\");\n          });\n        } else {\n          DataSetService.updateDataSet(this.id, {\n            id: this.id,\n            param1: this.param1,\n            param2: this.param2,\n            param3: this.param3,\n            param4: this.param4,\n            param5: this.param5,\n            param6: this.param6,\n            param7: this.param7,\n            param8: this.param8,\n            param9: this.param9,\n            param10: this.param10,\n            param11: this.param11,\n            param12: this.param12,\n            param13: this.param13,\n            param14: this.param14\n          }).then(() => {\n            this.$router.push(\"/data\");\n          });\n        }\n      }\n    },\n    refreshDataSetDetails() {\n      DataSetService.retrieveDataSet(this.id).then(res => {\n        this.param1 = res.data.param1;\n        this.param2 = res.data.param2;\n        this.param3 = res.data.param3;\n        this.param4 = res.data.param4;\n        this.param5 = res.data.param5;\n        this.param6 = res.data.param6;\n        this.param7 = res.data.param7;\n        this.param8 = res.data.param8;\n        this.param9 = res.data.param9;\n        this.param10 = res.data.param10;\n        this.param11 = res.data.param11;\n        this.param12 = res.data.param12;\n        this.param13 = res.data.param13;\n        this.param14 = res.data.param14;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      const num = new RegExp(\"^[0-9]*\\\\.?[0-9]+$\");\n      if (!this.param1 || !this.param2 || !this.param3 || !this.param4 || !this.param5 || !this.param6 || !this.param7 || !this.param8 || !this.param9 || !this.param10 || !this.param11 || !this.param12 || !this.param13 || !this.param14) {\n        this.errors.push(\"There are null values\");\n      } else {\n        this.errors = this.errors.filter(error => error !== \"There are null values\");\n      }\n      if (num.test(this.param1) === false || num.test(this.param2) === false || num.test(this.param3) === false || num.test(this.param4) === false || num.test(this.param5) === false || num.test(this.param6) === false || num.test(this.param7) === false || num.test(this.param8) === false || num.test(this.param9) === false || num.test(this.param10) === false || num.test(this.param11) === false || num.test(this.param12) === false || num.test(this.param13) === false || num.test(this.param14) === false) {\n        this.errors.push(\"There are non-numeric values\");\n      } else {\n        this.errors = this.errors.filter(error => error !== \"There are non-numeric values\");\n        this.param1 = Number(this.param1);\n        this.param2 = Number(this.param2);\n      }\n      console.log(typeof this.param1);\n      console.log(this.param1 <= 0);\n      if (this.param1 <= 0 || Number(this.param2) <= 0 || Number(this.param3) <= 0 || Number(this.param4) <= 0 || Number(this.param5) <= 0 || Number(this.param6) <= 0 || Number(this.param7) <= 0 || Number(this.param8) <= 0 || Number(this.param9) <= 0 || Number(this.param10) <= 0 || Number(this.param11) <= 0 || Number(this.param12) <= 0 || Number(this.param13) <= 0 || Number(this.param14) <= 0) {\n        console.log(\"shit\");\n        this.errors.push(\"There are non-positive values\");\n        console.log(this.errors);\n      } else {\n        this.errors = this.errors.filter(error => error !== \"There are non-positive values\");\n      }\n    }\n  },\n  created() {\n    this.refreshDataSetDetails();\n  }\n};","map":{"version":3,"mappings":"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","names":["DataSetService","name","data","param1","param2","param3","param4","param5","param6","param7","param8","param9","param10","param11","param12","param13","param14","errors","computed","id","Number","$route","params","methods","addData","length","createDataSet","userId","then","$router","push","updateDataSet","refreshDataSetDetails","retrieveDataSet","res","validateAndSubmit","e","preventDefault","num","RegExp","filter","error","test","console","log","created"],"sourceRoot":"","sources":["F:\\Study\\NKD\\2023FALL\\NP\\Target\\springboot3-postgresql-vue3-crud-main\\vue-3-crud-application\\src\\components\\DataSetSubmit.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h3>数据</h3>\r\n        <div class=\"container\">\r\n            <form @submit=\"validateAndSubmit\">\r\n                <div v-if=\"errors.length\">\r\n                    <div class=\"alert alert-danger\" v-bind:key=\"index\" v-for=\"(error, index) in errors\">\r\n                        {{ error }}\r\n                    </div>\r\n                </div>\r\n                <fieldset class=\"form-group\">\r\n                    <label>铁水质量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param1\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>废钢质量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param2\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>生铁质量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param3\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>白云石质量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param4\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>铁水硅含量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param5\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>矿石质量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param6\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>铁水温度</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param7\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>铁水碳含量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param8\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>吹氧时间</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param9\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>石灰石质量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param10\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>铁水带渣量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param11\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>余渣量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param12\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>溅渣时间</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param13\"/>\r\n                </fieldset>\r\n                <fieldset class=\"form-group\">\r\n                    <label>耗氧量</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"param14\"/>\r\n                </fieldset>\r\n                <button class=\"btn btn-success\" v-on:click=\"addData()\">提交</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport DataSetService from \"../service/DataSetService\";\r\n\r\nexport default {\r\n    name: \"DataSetSubmit\",\r\n    data() {\r\n        return {\r\n            param1: \"\",\r\n            param2: \"\",\r\n            param3: \"\",\r\n            param4: \"\",\r\n            param5: \"\",\r\n            param6: \"\",\r\n            param7: \"\",\r\n            param8: \"\",\r\n            param9: \"\",\r\n            param10: \"\",\r\n            param11: \"\",\r\n            param12: \"\",\r\n            param13: \"\",\r\n            param14: \"\",\r\n            errors: [],\r\n        };\r\n    },\r\n    computed: {\r\n        id() {\r\n            return Number(this.$route.params.id);\r\n        },\r\n    },\r\n    methods: {\r\n        addData() {\r\n            if (this.errors.length === 0) {\r\n                if (this.id === -1) {\r\n                    DataSetService.createDataSet({\r\n                        userId: this.userId,\r\n                        param1: this.param1,\r\n                        param2: this.param2,\r\n                        param3: this.param3,\r\n                        param4: this.param4,\r\n                        param5: this.param5,\r\n                        param6: this.param6,\r\n                        param7: this.param7,\r\n                        param8: this.param8,\r\n                        param9: this.param9,\r\n                        param10: this.param10,\r\n                        param11: this.param11,\r\n                        param12: this.param12,\r\n                        param13: this.param13,\r\n                        param14: this.param14,\r\n                    }).then(() => {\r\n                        this.$router.push(\"/data\");\r\n                    });\r\n                } else {\r\n                    DataSetService.updateDataSet(this.id, {\r\n                        id: this.id,\r\n                        param1: this.param1,\r\n                        param2: this.param2,\r\n                        param3: this.param3,\r\n                        param4: this.param4,\r\n                        param5: this.param5,\r\n                        param6: this.param6,\r\n                        param7: this.param7,\r\n                        param8: this.param8,\r\n                        param9: this.param9,\r\n                        param10: this.param10,\r\n                        param11: this.param11,\r\n                        param12: this.param12,\r\n                        param13: this.param13,\r\n                        param14: this.param14,\r\n                    }).then(() => {\r\n                        this.$router.push(\"/data\");\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        refreshDataSetDetails() {\r\n            DataSetService.retrieveDataSet(this.id).then((res) => {\r\n                this.param1 = res.data.param1;\r\n                this.param2 = res.data.param2;\r\n                this.param3 = res.data.param3;\r\n                this.param4 = res.data.param4;\r\n                this.param5 = res.data.param5;\r\n                this.param6 = res.data.param6;\r\n                this.param7 = res.data.param7;\r\n                this.param8 = res.data.param8;\r\n                this.param9 = res.data.param9;\r\n                this.param10 = res.data.param10;\r\n                this.param11 = res.data.param11;\r\n                this.param12 = res.data.param12;\r\n                this.param13 = res.data.param13;\r\n                this.param14 = res.data.param14;\r\n            });\r\n        },\r\n        validateAndSubmit(e) {\r\n            e.preventDefault();\r\n            const num = new RegExp(\"^[0-9]*\\\\.?[0-9]+$\");\r\n            if (!this.param1 || !this.param2 || !this.param3 || !this.param4 || !this.param5 || !this.param6\r\n                || !this.param7 || !this.param8 || !this.param9 || !this.param10 || !this.param11 || !this.param12\r\n                || !this.param13 || !this.param14) {\r\n                this.errors.push(\"There are null values\");\r\n            } else {\r\n                this.errors = this.errors.filter(error => error !== \"There are null values\");\r\n            }\r\n            if (num.test(this.param1) === false || num.test(this.param2) === false || num.test(this.param3) === false\r\n                || num.test(this.param4) === false || num.test(this.param5) === false || num.test(this.param6) === false\r\n                || num.test(this.param7) === false || num.test(this.param8) === false || num.test(this.param9) === false\r\n                || num.test(this.param10) === false || num.test(this.param11) === false\r\n                || num.test(this.param12) === false || num.test(this.param13) === false\r\n                || num.test(this.param14) === false) {\r\n                this.errors.push(\"There are non-numeric values\");\r\n            } else {\r\n                this.errors = this.errors.filter(error => error !== \"There are non-numeric values\");\r\n                this.param1 = Number(this.param1)\r\n                this.param2 = Number(this.param2)\r\n            }\r\n            console.log(typeof this.param1)\r\n            console.log(this.param1 <= 0)\r\n            if (this.param1 <= 0 || Number(this.param2) <= 0 || Number(this.param3) <= 0 ||\r\n                Number(this.param4) <= 0 || Number(this.param5) <= 0 || Number(this.param6) <= 0 ||\r\n                Number(this.param7) <= 0 || Number(this.param8) <= 0 || Number(this.param9) <= 0 ||\r\n                Number(this.param10) <= 0 || Number(this.param11) <= 0 || Number(this.param12) <= 0\r\n                || Number(this.param13) <= 0 || Number(this.param14) <= 0) {\r\n                console.log(\"shit\")\r\n                this.errors.push(\"There are non-positive values\");\r\n                console.log(this.errors)\r\n            } else {\r\n                this.errors = this.errors.filter(error => error !== \"There are non-positive values\");\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.refreshDataSetDetails();\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}